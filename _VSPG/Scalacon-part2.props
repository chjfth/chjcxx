<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Part2 is to be imported AFTER "$(VCTargetsPath)\Microsoft.Cpp.props" -->

  <!-- VSPG working variables -->
  <PropertyGroup>

    <vspg_OutputRoot>$(vspg_OUTPUT_ROOT)</vspg_OutputRoot>
    
    <!-- vspg_OutputRoot: Strip trailing backslash, and convert it to abs-path first -->
    <vspg_OutputRoot>$(vspg_OutputRoot.TrimEnd('\ '))</vspg_OutputRoot>
    <vspg_OutputRoot Condition=" '$(vspg_OutputRoot.indexOf(%3a))'=='1' " >$(vspg_OutputRoot)</vspg_OutputRoot>
    <vspg_OutputRoot Condition=" '$(vspg_OutputRoot.indexOf(%3a))'!='1' and '$(vspg_OutputRoot)'!='' " >$(MSBuildStartupDirectory)\$(vspg_OutputRoot)</vspg_OutputRoot>
    
    <vspg_slnOutputRoot Condition=" '$(vspg_OutputRoot)'=='' ">$(SolutionDir.TrimEnd('\'))</vspg_slnOutputRoot>
    <vspg_slnOutputRoot Condition=" '$(vspg_OutputRoot)'!='' ">$(vspg_OutputRoot)</vspg_slnOutputRoot>

    <_vspg_PrjDecoName>$(ProjectName)$(vspg_PrjDecoSuffix)$(TargetExt)</_vspg_PrjDecoName>

    <vspg_prjOutputRoot Condition=" '$(vspg_OutputRoot)'=='' ">.</vspg_prjOutputRoot>
    <vspg_prjOutputRoot Condition=" '$(vspg_OutputRoot)'!='' ">$(vspg_OutputRoot)\$(_vspg_PrjDecoName)</vspg_prjOutputRoot>
  
  </PropertyGroup>

  <!-- =================================================================== -->
  <!-- Compiler Linker related settings -->
  <!-- =================================================================== -->

  <!-- Better .obj/.exe/.pdb output folder structure -->
  <PropertyGroup>
    <LinkIncremental>false</LinkIncremental>
    <IntDir>$(vspg_prjOutputRoot)\obj-vc$(PlatformToolsetVersion)\$(Platform)\$(Configuration)\</IntDir>
    <OutDir>$(vspg_slnOutputRoot)\bin-vc$(PlatformToolsetVersion)\$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>
  
  <ItemDefinitionGroup>
    <BuildLog>
      <Path>$(IntDir)__$(MSBuildProjectName).build.log</Path>
    </BuildLog>
  </ItemDefinitionGroup>
  

  <!-- ====================================================================== -->
  <!-- Output vars that should/can be expanded in remaining vcxproj settings. -->
  <!-- These vars starts with sc_ .                                           -->
  <!-- ====================================================================== -->

  <PropertyGroup>
    
    <!-- Function body should be decorated with DLLEXPORT_fooapi=__declspec(dllexport) ,
    	so that the function is exported from the DLL.
    	User should then write in .vcxproj like this:
	      <PreprocessorDefinitions>$(sc_deco_DLLEXPORT);WIN32;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
     -->
    <sc_deco_DLLEXPORT>DLLEXPORT_$(TargetNameStem)=__declspec(dllexport)</sc_deco_DLLEXPORT>
    
  </PropertyGroup>

  <ItemDefinitionGroup>
    <ClCompile>
      <!-- PDB should be named like this. Yes, we want to see whole original exe/dll/lib name in PDB filename. -->
      <!-- [2022-03-25] note: $(TargetPath) cannot receive a value in <PropertyGroup>, so it has to be in ItemDefinitionGroup. -->
      <sc_ProgramDataBaseFileName>$(TargetPath).pdb</sc_ProgramDataBaseFileName>
    </ClCompile>

    <Link>
      <GenerateMapFile>true</GenerateMapFile>

      <sc_ImportLibrary>$(OutDir)$(TargetName)--imp.lib</sc_ImportLibrary>
    </Link>

  </ItemDefinitionGroup>


  <!-- ====================================================================== -->
  <!-- A MSBuild Target to check for Scalacon related input vars.             -->
  <!-- User should have set these vars before importing this Scalacon.props . -->
  <!-- ====================================================================== -->

  <Target Name="ScalaconDebugInfo">
    <Message Text="[[ScalaconDebugInfo]]" />
    <Message Text="TargetNameStem=$(TargetNameStem)" />
    <Message Text="sc_deco_DLLEXPORT=$(sc_deco_DLLEXPORT)" />
    <Message Text="sc_ProgramDataBaseFileName=$(sc_ProgramDataBaseFileName)" />
  </Target>

</Project>
