# template file for use with pattern1.mks, concise version, [GnumakeUniproc v1.0]
# ! Be sure to replace every occurrence of <angle-brackets> to be your
# actual content, or [ at least comment them out if some of them are
# not required] .

ifdef gmu_DIR_GNUMAKEUNIPROC
  include $(gmu_DIR_GNUMAKEUNIPROC)/pattern1-concise-header.mki
else
  $(error gmu_DIR_GNUMAKEUNIPROC is not defined, You have to set up GnumakeUniproc environment to use this Makefile)
endif

ifeq (,$(call gmuf_IsWordInSet,$(gmp_COMPILER_ID),msvc wince))
  $(error This Makefile supports only msvc and wince, while your gmp_COMPILER_ID=$(gmp_COMPILER_ID))
endif


gmu_PRJ_NAME = common-include-dumbdll

gmp_bc_IMAGE_TYPE = DLL

gmu_uf_LINK_OUTPUT = $(call gmpf_MakeDllName,common-include)

gmu_ud_SRC_ROOT = ..

dumbfile := dumb.cpp
dumbfilepath := $(gmu_d_StartupMakefile)/$(dumbfile)

gmu_up_list_SRC_FROM_ROOT += make-dumb-dll/$(dumbfile)

gmu_ud_list_PRJ_HEADER += ../include


### >>> special: generate dumb.cpp with all .h included.
ret := $(shell cd $(gmu_ud_list_PRJ_HEADER); \
	echo "$(_GmuSharp)define __SCALACON_MSVC_MAKING_DUMB_PDB__" > $(dumbfilepath); \
	for f in *.h ; do echo "$(_GmuSharp)include <$$f>" >> $(dumbfilepath); done; \
	echo "void dumb(){}" >> $(dumbfilepath))
### <<< special


# ----------- below for plugin PI_sync_devoutput -----------

# If you use plugin PI_sync_devoutput, you may want to set:
gmi_SYDO_ud_SYNC_HEADER_FROM = $(gmu_ud_SRC_ROOT)/include
	# The dir that your headers reside in. ( relative to $(CURDIR) )

gmi_SYDO_up_list_SYNC_HEADER = *
	# List filepaths of the header files to sync. ( relative to $(gmi_SYDO_ud_SYNC_HEADER_FROM) )


###### DON'T DELETE THIS FINAL include. ######
include $(gmu_DIR_GNUMAKEUNIPROC)/pattern1.mks
